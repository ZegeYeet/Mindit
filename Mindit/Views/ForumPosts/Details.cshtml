@model Mindit.ViewModels.PostDetailsPageViewModel;

@{
    ViewData["Title"] = "Details";
}

<div>
    <table class="DetailsTable table-borderless table-responsive">

        <tr>
            <td>
                <h1>@Model.forumPost.postTitle</h1>
            </td>
        </tr>
        <tr>
            <td>
                @*@Html.DisplayFor(modelItem => item.classIcon)*@
                <span style="font-size:10pt">
                    Posted by
                    @Html.DisplayFor(modelItem => Model.forumPost.authorName)
                    at
                    @Html.DisplayFor(modelItem => Model.forumPost.postDate)
                </span>
            </td>
        </tr>
        <tr>
            <td>
                <span style="font-size:14pt">@Html.DisplayFor(modelItem => Model.forumPost.postBody)</span>
            </td>
        </tr>
        <tr>
            <td>

                @{
                    var upvoteImgUrl = "~/Images/upvoteIconEmpty.png";
                    var initUpvoteValue = "upvoteEmpty";
                    if (Model.forumPost.postVotes.Any(p => p.userName == User.Identity.Name))
                    {
                        if (Model.forumPost.postVotes.FirstOrDefault(p => p.userName == User.Identity.Name).voteStyle == "upvoteFull")
                        {
                            upvoteImgUrl = "~/Images/upvoteIconFull.png";
                            initUpvoteValue = "upvoteFull";
                        }
                    }
                }
                <button class="postVoteButton" name="upvoteButton" id="upvoteButton @Model.forumPost.PostId" type="submit" value=@initUpvoteValue onclick="ClickVoteButton(@Model.forumPost.PostId, this, voteCountText@(Model.forumPost.PostId))"
                        style="background-image:url(@Url.Content(upvoteImgUrl))">
                </button>


                @{
                    var postLikeSum = Model.forumPost.postLikes - Model.forumPost.postDislikes;
                    <span id='voteCountText@(Model.forumPost.PostId)'>
                        @Html.DisplayFor(Model => postLikeSum)
                    </span>
                }


                @{
                    var downvoteImgUrl = "~/Images/downvoteIconEmpty.png";
                    var initDownvoteValue = "downvoteEmpty";
                    if (Model.forumPost.postVotes.Any(p => p.userName == User.Identity.Name))
                    {
                        if (Model.forumPost.postVotes.FirstOrDefault(p => p.userName == User.Identity.Name).voteStyle == "downvoteFull")
                        {
                            downvoteImgUrl = "~/Images/downvoteIconFull.png";
                            initDownvoteValue = "downvoteFull";
                        }
                    }
                }
                <button class="postVoteButton" name="downvoteButton" id="downvoteButton @Model.forumPost.PostId" type="submit" value=@initDownvoteValue onclick="ClickVoteButton(@Model.forumPost.PostId, this, voteCountText@(Model.forumPost.PostId))"
                        style="background-image:url(@Url.Content(downvoteImgUrl))">
                </button>
            </td>
        </tr>
    </table>
</div>


<div class="row">
    <div class="col-md-4">
        <form asp-controller="ForumReplies" asp-action="Create" asp->
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <input hidden asp-for="@Model.forumReply.PostId" class="form-control" value="@Model.forumPost.PostId" />
                <span hidden asp-validation-for="@Model.forumReply.PostId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <span class="control-label">Reply Text:</span>
                <textarea asp-for="@Model.forumReply.replyBody" class="form-control"></textarea>
                <span asp-validation-for="@Model.forumReply.replyBody" class="text-danger"></span>
            </div>
            <div class="form-group" style="padding-top:4px;">
                <input type="submit" value="Reply" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div> 


<hr />
<div class="row">
        @foreach (var reply in Model.forumPost.forumReplies)
        {
            <div style="padding-top: 5px">
                <table class="ReplyTable table-borderless table-responsive">
                    <tbody>
                        <tr>
                            <td>
                                <span style="font-size: 10pt">
                                    reply from @reply.authorName at @reply.replyDate
                                </span>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <span>
                                    @reply.replyBody
                                </span>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        }
</div>



<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}