@model IEnumerable<Mindit.Models.ForumPost>

@{
    ViewData["Title"] = "Index";
}



@if (Model.Any())
{
    <h1>Welcome to Tanks Place!</h1>
    <p>
        <a asp-action="Create">Create Post</a>
    </p>


    @foreach (var item in Model)
    {
        <div class="row justify-content-center">
            <table class="table table-borderless table-responsive">
                <tbody>
                    <tr>
                        <td>
                            @*@Html.DisplayFor(modelItem => item.classIcon)*@
                            <span>
                                Posted by
                                @Html.DisplayFor(modelItem => item.authorName)
                                at
                                @Html.DisplayFor(modelItem => item.postDate)
                            </span>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <a style="font-size:15pt; text-decoration: none; color:inherit;" href="/ForumPosts/Details/@item.PostId">
                                @item.postTitle
                                </a>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <a style="text-decoration: none; color:inherit;" href="/ForumPosts/Details/@item.PostId">
                                @item.postBody
                            </a>
                        </td>
                    </tr>
                    <tr>
                        <td>

                            @{
                                var upvoteImgUrl = "~/Images/upvoteIconEmpty.png";
                                var initUpvoteValue = "upvoteEmpty";
                                if (item.postVotes.Any(p => p.userName == User.Identity.Name))
                                {
                                    if (item.postVotes.FirstOrDefault(p => p.userName == User.Identity.Name).voteStyle == "upvoteFull")
                                    {
                                        upvoteImgUrl = "~/Images/upvoteIconFull.png";
                                        initUpvoteValue = "upvoteFull";
                                    }
                                }
                            }
                            <button class="postVoteButton" name="upvoteButton" id="upvoteButton @item.PostId" type="submit" value=@initUpvoteValue onclick="ClickVoteButton(@item.PostId, this, voteCountText@(item.PostId))"
                                    style="background-image:url(@Url.Content(upvoteImgUrl))">
                            </button>


                            @{
                                var postLikeSum = item.postLikes - item.postDislikes;
                                <span id='voteCountText@(item.PostId)'>
                                    @Html.DisplayFor(modelItem => postLikeSum)
                                </span>
                            }


                            @{
                                var downvoteImgUrl = "~/Images/downvoteIconEmpty.png";
                                var initDownvoteValue = "downvoteEmpty";
                                if (item.postVotes.Any(p => p.userName == User.Identity.Name))
                                {
                                    if (item.postVotes.FirstOrDefault(p => p.userName == User.Identity.Name).voteStyle == "downvoteFull")
                                    {
                                        downvoteImgUrl = "~/Images/downvoteIconFull.png";
                                        initDownvoteValue = "downvoteFull";
                                    }
                                }
                            }
                            <button class="postVoteButton" name="downvoteButton" id="downvoteButton @item.PostId" type="submit" value=@initDownvoteValue onclick="ClickVoteButton(@item.PostId, this, voteCountText@(item.PostId))"
                                    style="background-image:url(@Url.Content(downvoteImgUrl))">
                            </button>
                            <button class="postReplyButton" name="replyButton" type="submit" value="@item.PostId">
                                @Html.ActionLink("Reply", "CreateForumReply", "ForumPosts", new { id = item.PostId})
                            </button>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    }
}
else
{
    <div class="noPosts">
        <h3>
            There are no posts yet. <br />
            Why not
            <a asp-action="Create">
                <span>create</span>
            </a>
            one?
        </h3>
    </div>
}


